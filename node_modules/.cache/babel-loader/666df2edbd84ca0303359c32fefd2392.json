{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Casper\\\\Desktop\\\\MicroGlobe\\\\Saasland_React\\\\src\\\\contexts\\\\blogContext.js\";\nimport React, { createContext, useContext, useState } from \"react\";\nconst AlignmentContext = createContext({});\n\nconst AlignmentProvider = ({\n  children\n}) => {\n  return React.createElement(AlignmentContext.Provider, {\n    value: {\n      name: \"enes\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, children);\n};\n\nexport default AlignmentProvider;\nexport const useAlignmentContext = () => {\n  const context = useContext(AlignmentContext);\n\n  if (context === undefined) {\n    throw new Error(\"useAlignment must be used within an AlignmentProvider\");\n  }\n\n  return context;\n};","map":{"version":3,"sources":["C:/Users/Casper/Desktop/MicroGlobe/Saasland_React/src/contexts/blogContext.js"],"names":["React","createContext","useContext","useState","AlignmentContext","AlignmentProvider","children","name","useAlignmentContext","context","undefined","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;AAEA,MAAMC,gBAAgB,GAAGH,aAAa,CAAC,EAAD,CAAtC;;AACA,MAAMI,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC1C,SACE,oBAAC,gBAAD,CAAkB,QAAlB;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGD,QALH,CADF;AASD,CAVD;;AAYA,eAAeD,iBAAf;AAEA,OAAO,MAAMG,mBAAmB,GAAG,MAAM;AACvC,QAAMC,OAAO,GAAGP,UAAU,CAACE,gBAAD,CAA1B;;AACA,MAAIK,OAAO,KAAKC,SAAhB,EAA2B;AACzB,UAAM,IAAIC,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACD,SAAOF,OAAP;AACD,CANM","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n\r\nconst AlignmentContext = createContext({});\r\nconst AlignmentProvider = ({ children }) => {\r\n  return (\r\n    <AlignmentContext.Provider\r\n      value={{\r\n        name: \"enes\",\r\n      }}\r\n    >\r\n      {children}\r\n    </AlignmentContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlignmentProvider;\r\n\r\nexport const useAlignmentContext = () => {\r\n  const context = useContext(AlignmentContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useAlignment must be used within an AlignmentProvider\");\r\n  }\r\n  return context;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}