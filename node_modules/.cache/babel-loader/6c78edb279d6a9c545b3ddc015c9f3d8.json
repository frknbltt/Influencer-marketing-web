{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Casper\\\\Desktop\\\\MicroGlobe\\\\Saasland_React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{createContext,useContext,useState}from\"react\";var AlignmentContext=createContext({});var AlignmentProvider=function AlignmentProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),posts=_useState2[0],setPosts=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),posts2=_useState4[0],setPosts2=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),selectedPost=_useState6[0],setSelectedPost=_useState6[1];var getPosts=function getPosts(){var requestOptions={headers:{\"app-id\":\"60ad503fc816137787ac285c\"}};fetch(\"https://dummyapi.io/data/api/post\",requestOptions).then(function(response){return response.json();}).then(function(responseJson){return setPosts(responseJson.data);});};var getPosts2=function getPosts2(){var requestOptions={headers:{\"app-id\":\"60ad503fc816137787ac285c\"}};fetch(\"https://dummyapi.io/data/api/post\",requestOptions).then(function(response){return response.json();}).then(function(responseJson){return setPosts2(responseJson.data);});};var getPostDetail=function getPostDetail(postId){var requestOptions={headers:{\"app-id\":\"60ad503fc816137787ac285c\"}};fetch(\"https://dummyapi.io/data/api/post/\".concat(postId),requestOptions).then(function(response){return response.json();}).then(function(responseJson){return setSelectedPost(responseJson);});};return React.createElement(AlignmentContext.Provider,{value:{posts:posts,getPosts:getPosts,posts2:posts2,getPosts2:getPosts2,getPostDetail:getPostDetail,selectedPost:selectedPost}},children);};export default AlignmentProvider;export var useAlignmentContext=function useAlignmentContext(){var context=useContext(AlignmentContext);if(context===undefined){throw new Error(\"useAlignment must be used within an AlignmentProvider\");}return context;};","map":{"version":3,"sources":["C:/Users/Casper/Desktop/MicroGlobe/Saasland_React/src/contexts/blogContext.js"],"names":["React","createContext","useContext","useState","AlignmentContext","AlignmentProvider","children","posts","setPosts","posts2","setPosts2","selectedPost","setSelectedPost","getPosts","requestOptions","headers","fetch","then","response","json","responseJson","data","getPosts2","getPostDetail","postId","useAlignmentContext","context","undefined","Error"],"mappings":"kLAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,CAA2CC,QAA3C,KAA2D,OAA3D,CAEA,GAAMC,CAAAA,gBAAgB,CAAGH,aAAa,CAAC,EAAD,CAAtC,CACA,GAAMI,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eAChBH,QAAQ,CAAC,EAAD,CADQ,wCACnCI,KADmC,eAC5BC,QAD4B,8BAEdL,QAAQ,CAAC,EAAD,CAFM,yCAEnCM,MAFmC,eAE3BC,SAF2B,8BAGFP,QAAQ,CAAC,EAAD,CAHN,yCAGnCQ,YAHmC,eAGrBC,eAHqB,eAK1C,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,GAAMC,CAAAA,cAAc,CAAG,CACrBC,OAAO,CAAE,CACP,SAAU,0BADH,CADY,CAAvB,CAMAC,KAAK,CAAC,mCAAD,CAAsCF,cAAtC,CAAL,CACGG,IADH,CACQ,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EADR,EAEGF,IAFH,CAEQ,SAACG,YAAD,QAAkBZ,CAAAA,QAAQ,CAACY,YAAY,CAACC,IAAd,CAA1B,EAFR,EAGD,CAVD,CAWA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAMR,CAAAA,cAAc,CAAG,CACrBC,OAAO,CAAE,CACP,SAAU,0BADH,CADY,CAAvB,CAMAC,KAAK,CAAC,mCAAD,CAAsCF,cAAtC,CAAL,CACGG,IADH,CACQ,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EADR,EAEGF,IAFH,CAEQ,SAACG,YAAD,QAAkBV,CAAAA,SAAS,CAACU,YAAY,CAACC,IAAd,CAA3B,EAFR,EAGD,CAVD,CAYA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,MAAD,CAAY,CAChC,GAAMV,CAAAA,cAAc,CAAG,CACrBC,OAAO,CAAE,CACP,SAAU,0BADH,CADY,CAAvB,CAMAC,KAAK,6CAAsCQ,MAAtC,EAAgDV,cAAhD,CAAL,CACGG,IADH,CACQ,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EADR,EAEGF,IAFH,CAEQ,SAACG,YAAD,QAAkBR,CAAAA,eAAe,CAACQ,YAAD,CAAjC,EAFR,EAGD,CAVD,CAYA,MACE,qBAAC,gBAAD,CAAkB,QAAlB,EACE,KAAK,CAAE,CACLb,KAAK,CAALA,KADK,CAELM,QAAQ,CAARA,QAFK,CAGLJ,MAAM,CAANA,MAHK,CAILa,SAAS,CAATA,SAJK,CAKLC,aAAa,CAAbA,aALK,CAMLZ,YAAY,CAAZA,YANK,CADT,EAUGL,QAVH,CADF,CAcD,CAtDD,CAwDA,cAAeD,CAAAA,iBAAf,CAEA,MAAO,IAAMoB,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CACvC,GAAMC,CAAAA,OAAO,CAAGxB,UAAU,CAACE,gBAAD,CAA1B,CACA,GAAIsB,OAAO,GAAKC,SAAhB,CAA2B,CACzB,KAAM,IAAIC,CAAAA,KAAJ,CAAU,uDAAV,CAAN,CACD,CACD,MAAOF,CAAAA,OAAP,CACD,CANM","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n\r\nconst AlignmentContext = createContext({});\r\nconst AlignmentProvider = ({ children }) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [posts2, setPosts2] = useState([]);\r\n  const [selectedPost, setSelectedPost] = useState([]);\r\n\r\n  const getPosts = () => {\r\n    const requestOptions = {\r\n      headers: {\r\n        \"app-id\": \"60ad503fc816137787ac285c\",\r\n      },\r\n    };\r\n\r\n    fetch(\"https://dummyapi.io/data/api/post\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => setPosts(responseJson.data));\r\n  };\r\n  const getPosts2 = () => {\r\n    const requestOptions = {\r\n      headers: {\r\n        \"app-id\": \"60ad503fc816137787ac285c\",\r\n      },\r\n    };\r\n\r\n    fetch(\"https://dummyapi.io/data/api/post\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => setPosts2(responseJson.data));\r\n  };\r\n\r\n  const getPostDetail = (postId) => {\r\n    const requestOptions = {\r\n      headers: {\r\n        \"app-id\": \"60ad503fc816137787ac285c\",\r\n      },\r\n    };\r\n\r\n    fetch(`https://dummyapi.io/data/api/post/${postId}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => setSelectedPost(responseJson));\r\n  };\r\n\r\n  return (\r\n    <AlignmentContext.Provider\r\n      value={{\r\n        posts,\r\n        getPosts,\r\n        posts2,\r\n        getPosts2,\r\n        getPostDetail,\r\n        selectedPost,\r\n      }}\r\n    >\r\n      {children}\r\n    </AlignmentContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlignmentProvider;\r\n\r\nexport const useAlignmentContext = () => {\r\n  const context = useContext(AlignmentContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useAlignment must be used within an AlignmentProvider\");\r\n  }\r\n  return context;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}